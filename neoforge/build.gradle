plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven { url "https://maven.shedaniel.me/" } // cloth config
    maven { url "https://maven.terraformersmc.com/releases/" } // mod menu
}

dependencies {
//    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

//    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
//    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
//
//    modApi("me.shedaniel.cloth:cloth-config-neoforge:$rootProject.neoforge_cloth_config_version")
}

processResources {
    var replaceProperties = [
            // Mod info
            mod_license                         : mod_license,
            mod_name                            : mod_name,
            mod_authors                         : mod_authors,
            mod_description                     : mod_description,
            mod_group_id                        : mod_group_id,
            mod_display_url                     : mod_display_url,
            mod_issue_tracker                   : mod_issue_tracker,
            mod_update_json                     : mod_update_json,
            // Mod properties
            mod_id                              : mod_id,
            mod_version                         : mod_version,
            maven_group                         : maven_group,
            archives_name                       : archives_name,
            enabled_platforms                   : enabled_platforms,
            // Minecraft properties
            minecraft_version                   : minecraft_version,
//            // Neoforge dependencies
//            neoforge_version                    : neoforge_version,
//            neoforge_cloth_config_version       : neoforge_cloth_config_version,
//            // Neoforge dependencies requirements
//            neoforge_loader_version_range       : neoforge_loader_version_range,
//            neoforge_version_range              : neoforge_version_range,
//            neoforge_minecraft_version_range    : neoforge_minecraft_version_range,
//            neoforge_cloth_config_version_range : neoforge_cloth_config_version_range
    ]

    inputs.properties replaceProperties

    from(project(":common").sourceSets["main"].resources)

    filesMatching(['META-INF/neoforge.mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
